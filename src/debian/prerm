#!/bin/bash
#--------------------------------------
# Script Name:  prerm
# Version:      1.2
# Authors:      skurka@ukaachen.de, shuening@ukaachen.de, akombeiz@ukaachen.de
# Date:         08 Nov 24
# Purpose:      Prepares the system before package files are removed by stopping services, backing up user data, and cleaning runtime artifacts.
# --------------------------------------

readonly OPERATION="${1}"

# Source helper script from i2b2 package
source_i2b2_helper() {
  local helper_path="/usr/share/__I2B2_PACKAGE_NAME__/helper.sh"
  echo -e "\033[0;34m[INFO]\033[0m Loading i2b2 helper script..."
  if [[ ! -f "${helper_path}" ]]; then
    echo -e "\033[0;31m[ERROR]\033[0m i2b2 helper.sh not found at ${helper_path}" >&2
    exit 1
  fi
  . "${helper_path}"
  echo -e "\033[0;32m[SUCCESS]\033[0m Helper script loaded"
}

cleanup_j2ee_deployments() {
  local deploy_dir="/opt/wildfly/standalone/deployments"
  log_info "Cleaning up deployments..."

  if ! compgen -G "${deploy_dir}/dwh-j2ee-*" > /dev/null; then
    log_warn "No deployments found"
    return 0
  fi
  rm -f "${deploy_dir}"/dwh-j2ee-*
  log_success "Deployments cleaned up"
}

# Backs up aktin.properties by moving it with a timestamped name.
# Using `mv` instead of `cp` removes the original file, so `
# dpkg` wonâ€™t detect a modified configuration during upgrades.
# This ensures the new version installs without prompting, while
# preserving the old file as a backup.
backup_aktin_properties() {
  local config_path="/etc/aktin/aktin.properties"
  local backup_path="/etc/aktin/backup_$(date +%Y%m%d_%H%M)_aktin.properties"
  log_info "Backing up AKTIN configuration..."

  if [[ ! -f "${config_path}" ]]; then
    log_warn "No configuration found"
    return 0
  fi
  if ! mv -f "${config_path}" "${backup_path}"; then
    log_error "Backup failed: ${backup_path}"
    return 1
  fi
  log_success "Configuration backed up to ${backup_path}"
}

backup_config_removal_script() {
  local cli_file="/opt/wildfly/bin/remove-aktin-config.cli"
  local temp_cli="/tmp/remove-aktin-config.cli"
  log_info "Backing up WildFly CLI script..."

  if [[ -f "${cli_file}" ]]; then
    cp "${cli_file}" "${temp_cli}"
    log_success "CLI script backed up to ${temp_cli}"
  else
    log_warn "No CLI script found to backup"
  fi
}

main() {
  set -euo pipefail
  case "$OPERATION" in
    remove)
      # Runs during package removal before files are deleted
      source_i2b2_helper
      stop_service "wildfly"
      cleanup_j2ee_deployments
      backup_aktin_properties
      backup_config_removal_script
      ;;
    upgrade)
      # Runs during package upgrade before old files are deleted
      ;;
  esac
}

main "$@"
