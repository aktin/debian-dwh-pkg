#!/bin/bash
#--------------------------------------
# Script Name:  postrm
# Version:      1.2
# Author:       skurka@ukaachen.de, shuening@ukaachen.de, akombeiz@ukaachen.de
# Date:         08 Nov 24
# Purpose:      Cleans up after package files are removed by purging configurations, user data, database entries, and notifying users about remaining manual steps.
#--------------------------------------

log_info() { echo -e "\033[0;34m[INFO]\033[0m $1"; }
log_success() { echo -e "\033[0;32m[SUCCESS]\033[0m $1"; }
log_warn() { echo -e "\033[1;33m[WARN]\033[0m $1"; }
log_error() { echo -e "\033[0;31m[ERROR]\033[0m $1" >&2; }

readonly OPERATION="${1}"

# Source helper script from i2b2 package
source_i2b2_helper() {
  local helper_path="/usr/share/__I2B2_PACKAGE_NAME__/helper.sh"
  log_info "Loading i2b2 helper script..."
  if [[ ! -f "${helper_path}" ]]; then
    log_error "i2b2 helper script not found at ${helper_path}"
    return 1
  fi
  source "${helper_path}"
  log_success "Helper script loaded"
}

disable_apache_reverse_proxy_config() {
  log_info "Removing Apache proxy configuration..."
  a2disconf aktin-j2ee-reverse-proxy >/dev/null 2>&1 || true
  systemctl restart apache2 || true
  log_success "Apache proxy configuration removed"
}

notify_user_about_http_module() {
  echo -e "\033[1;33m[NOTICE] The Apache proxy_http module remains enabled.

If no other services require it, you can disable it with:
  sudo a2dismod proxy_http
  sudo systemctl restart apache2\033[0m"
}

cleanup_wildfly_config_links() {
  log_info "Removing AKTIN configuration links from WildFly..."
  rm -f /opt/wildfly/standalone/configuration/aktin.properties
  log_success "WildFly configuration links removed"
}

remove_aktin_datasource() {
  local temp_cli="/tmp/remove-aktin-config.cli"
  log_info "Removing AKTIN datasource..."

  if [[ -f "${temp_cli}" ]]; then
    /opt/wildfly/bin/jboss-cli.sh --file="${temp_cli}"
    rm -f "${temp_cli}"
    log_success "Datasource removed"
  else
    log_warn "No CLI script found to remove datasource"
  fi
}

# TODO change to thrown trigger for i2b2 package
set_wildfly_permissions() {
  log_info "Setting up Wildfly user permissions..."
  chown -R wildfly:wildfly /opt/wildfly
  chown -R wildfly:wildfly /var/lib/aktin
  log_success "WildFly user permissions set"
}

drop_aktin_database() {
  if ! command -v psql >/dev/null 2>&1 || ! systemctl is-active --quiet postgresql; then
    log_warn "PostgreSQL not available"
    return 0
  fi
  connect_to_psql
  log_info "Removing AKTIN database..."
  if [[ $(eval "${PSQL} -l" | grep "aktin" | wc -l) -gt 0 ]]; then
    eval "${PSQL} -v ON_ERROR_STOP=1" <<EOF >/dev/null
__AKTIN_DROP_STATEMENT__
EOF
    log_success "Database removed successfully"
  else
    log_info "Database already removed"
  fi
}

purge_aktin_files() {
  log_info "Purging AKTIN properties backups and files..."
  rm -rf /etc/aktin
  rm -rf /var/lib/aktin
  log_success "AKTIN files purged"
}

main() {
  set -euo pipefail
  source_i2b2_helper
  case "$OPERATION" in
    remove)
      # Runs during package removal after files have been deleted
      disable_apache_reverse_proxy_config
      notify_user_about_http_module
      cleanup_wildfly_config_links
      remove_aktin_datasource
      ;;
    purge)
      # Runs during a purge after 'postrm remove' to delete all leftover files
      drop_aktin_database
      purge_aktin_files
      ;;
  esac
  set_wildfly_permissions
  check_and_start_service "wildfly"
}

main "$@"
