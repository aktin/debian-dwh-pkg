#!/bin/bash
#--------------------------------------
# Script Name:  postinst
# Version:      1.0
# Author:       skurka@ukaachen.de, shuening@ukaachen.de, akombeiz@ukaachen.de
# Date:         29 Oct 24
# Purpose:      Post-installation script for 'aktin'. This script configures services, restores settings from backups if available,
#               initializes and seeds the AKTIN database, configures the Apache reverse proxy, and deploys the datasource in WildFly.
#--------------------------------------

readonly OPERATION="${1}"

restore_aktin_properties_from_backup() {
  local path_properties="/etc/aktin/aktin.properties"
  if [[ $(ls /etc/aktin/ | grep -c "backup_*") -gt 0 ]]; then
    local backup_newest
    backup_newest=$(ls -t /etc/aktin/backup_* | head -1)
    # iterate through all rows in backup, split each row into
    # key-value by '=', overwrite value in aktin.properties with
    # backup if found
    while read -r line_backup; do
      if [[ ! $line_backup = \#* && -n $line_backup ]]; then
        local key="${line_backup%=*}"
        local value="${line_backup#*=}"
        sed -i "s|${key}=.*|${key}=${value}|" "$path_properties"
      fi
    done < "$backup_newest"
  fi
}

create_symlink_for_aktin_properties() {
  chown -R wildfly:wildfly /etc/aktin
  ln -sf /etc/aktin/aktin.properties /opt/wildfly/standalone/configuration/
}

configure_apache2_reverse_proxy() {
  echo "Enabling apache2 proxy_http module ..."
  a2enmod proxy_http >/dev/null || true
  a2enconf aktin-j2ee-reverse-proxy >/dev/null || true
  echo "Restarting apache2 ..."
  systemctl restart apache2.service
}

connect_to_psql() {
  . /usr/share/debconf/confmodule
  local debconf_name
  debconf_name=$(echo "$DPKG_MAINTSCRIPT_PACKAGE" | awk -F '-' '{print $1"-"$2}')

  db_get "${debconf_name}/db_conn"
  if [ "$RET" = "unix" ]; then
    readonly PSQL="sudo -u postgres psql"
    echo "Connecting to postgres via local unix socket."
  else
    db_get "${debconf_name}/db_host"; local host="$RET"
    db_get "${debconf_name}/db_port"; local port="$RET"
    db_get "${debconf_name}/db_user"; local user="$RET"
    db_get "${debconf_name}/db_pass"; local pass="$RET"
    readonly PSQL="psql postgresql://${user}:${pass}@${host}:${port}?sslmode=require"
    echo "Connecting to postgres via TCP/IP to $host:$port."
  fi
}

wait_for_psql_connection() {
  local waitcount=0
  while ! systemctl start postgresql 2>/dev/null; do
    if [ "$waitcount" -lt 12 ]; then
      echo "Database not yet installed. Waiting ..."
      waitcount=$((waitcount + 1))
      sleep 5
    else
      echo "Database not yet installed. Aborting ..."
      exit 1
    fi
  done
  systemctl enable postgresql.service
}

init_and_seed_aktin_database() {
  if [[ $(eval "$PSQL -l" | grep "aktin" | wc -l) == 0 ]]; then
    echo "Seeding i2b2 database with aktin data ..."
    eval "$PSQL -d i2b2 -v ON_ERROR_STOP=1 -f /usr/share/$DPKG_MAINTSCRIPT_PACKAGE/database/addon_i2b2metadata.i2b2.sql" >/dev/null
    eval "$PSQL -d i2b2 -v ON_ERROR_STOP=1 -f /usr/share/$DPKG_MAINTSCRIPT_PACKAGE/database/addon_i2b2crcdata.concept_dimension.sql" >/dev/null
    echo "Creating aktin database and user ..."
    eval "$PSQL -v ON_ERROR_STOP=1 -f /usr/share/$DPKG_MAINTSCRIPT_PACKAGE/database/aktin_postgres_init.sql" >/dev/null
  else
    echo -e "aktin database already exists. Skipping ..."
  fi
}

apply_database_updates() {
  for sqlfile in /usr/share/${DPKG_MAINTSCRIPT_PACKAGE}/database-update/*; do
    eval "$PSQL -d i2b2 -v ON_ERROR_STOP=1 -f $sqlfile" >/dev/null
  done
}

# update files uploaded with old p21 scripts to newest script id
update_p21_script_references() {
  if [[ -n $(ls /var/lib/aktin/import 2>/dev/null) ]]; then
    for folder in /var/lib/aktin/import/*; do
      sed -i "s|script=p21.*|script=p21|" "$folder/properties"
    done
  fi
}

# deploy aktin datasource
configure_wildfly() {
  /opt/wildfly/bin/jboss-cli.sh --file=/opt/wildfly/bin/aktin_config.cli
}

main() {
  set -euo pipefail
  case "$OPERATION" in
    configure)
      restore_aktin_properties_from_backup
      create_symlink_for_aktin_properties
      configure_apache2_reverse_proxy
      connect_to_postgresql
      wait_for_postgresql_connection
      initialize_aktin_database
      apply_database_updates
      update_p21_script_references
      configure_wildfly
      systemctl restart wildfly.service
      ;;
    abort-remove)
      systemctl enable wildfly.service || true
      systemctl start wildfly.service || true
      ;;
    upgrade)
      # Future upgrade steps can be added here
      ;;
  esac
}

main "$@"